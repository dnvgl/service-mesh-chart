{{- define "image" -}}
{{- if .Values.image.registry -}}
  {{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- else -}}
  {{ .Values.image.repository }}:{{ .Values.image.tag }}
{{- end -}}
{{- end -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "platform-service.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "platform-service.name" . }}
    helm.sh/chart: {{ include "platform-service.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app: {{ required "app is required" .Values.app }}
    version: {{ .Values.version }}
spec:
  {{- if eq .Values.updateStrategy "NoSurge" }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  {{- end }}
  {{- if eq .Values.updateStrategy "Recreate" }}
  strategy:
    type: Recreate
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "platform-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "platform-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{ required "app is required" .Values.app }}
        version: {{ .Values.version }}
        {{- if .Values.additionalPodLabels }}
{{- with .Values.additionalPodLabels }}
{{ tpl . $ | indent 8 }}
{{- end }}
        {{- end }}
      annotations:
        {{- if .Values.proxyResources.requests }}  
        {{- if .Values.proxyResources.requests.cpu }}  
        sidecar.istio.io/proxyCPU: {{ .Values.proxyResources.requests.cpu }}
        {{- end }}
        {{- if .Values.proxyResources.requests.cpuLimit }}  
        sidecar.istio.io/proxyCPULimit: {{ .Values.proxyResources.requests.cpuLimit }}
        {{- end }}
        {{- if .Values.proxyResources.requests.memory }}  
        sidecar.istio.io/proxyMemory: {{ .Values.proxyResources.requests.memory }}
        {{- end }};
        {{- if .Values.proxyResources.requests.memoryLimit }}  
        sidecar.istio.io/proxyMemoryLimit: {{ .Values.proxyResources.requests.memoryLimit }}
        {{- end }};
        {{- end }}
        {{- if .Values.service.liveness.enabled }}  
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        {{- end }}
    spec:
      serviceAccountName: {{ include "platform-service.serviceAccountName" . }}
      initContainers:
      {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: "{{ include "image" . }}"
          imagePullPolicy: {{ .image.pullPolicy }}
          env:
{{- with .envVariables }}
{{ toYaml . | indent 12 }}
{{- end }}
      {{- end }}
      containers:
        - name: {{ include "platform-service.name" . }}
          image: "{{ include "image" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
{{ if .Values.envFrom }}
          envFrom:
{{- with .Values.envFrom }}
{{ toYaml . | indent 12 }}
{{- end }}
{{ end }}
          env:
{{- range $key, $value := .Values.env }}
            - name: {{ $key }}
{{- if contains "valueFrom" ($value | toString) }}
{{ $value | toYaml | trim | indent 14 }}
{{- else }}
              value: {{ $value | quote }}
{{- end }}
{{- end }}

{{- if .Values.command }}
          command:
            {{- range .Values.command }}
            - {{ . }}
            {{- end }}
{{- end }}

{{- if .Values.workingDir }}
          workingDir: {{ .Values.workingDir }}
{{- end }}

          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          {{- if .Values.service.liveness.enabled }} 
          livenessProbe:
            httpGet:
              path: {{ .Values.service.liveness.path }}
              port: {{ .Values.image.containerPort }}
            initialDelaySeconds: {{ .Values.service.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.service.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.service.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.service.liveness.failureThreshold }}

          {{- end }}
          volumeMounts:
          {{- range .Values.volumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
{{- if .subPath }}
              subPath: {{ .subPath }}
{{- end }}
          {{- end }}

          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: "{{ .Values.image.pullSecret }}"
      {{- end }}
      volumes:
{{- range .Values.volumes }}
      - name: {{ .name }}
{{ tpl .volumeDefinition $ | indent 8 }}
{{- end }}
